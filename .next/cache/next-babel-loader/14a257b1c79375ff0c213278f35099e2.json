{"ast":null,"code":"var _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/pages/shop.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport { gql } from \"babel-plugin-graphql-js-client-transform\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shopName: \"\",\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const client = this.props.client; // let query = client.query(root => {\n    //   root.add(\"shop\", shop => {\n    //     shop.add(\"name\");\n    //     shop.addConnection(\"products\", { args: { first: 10 } }, product => {\n    //       product.add(\"title\");\n    //       product.add(\"description\");\n    //       product.addConnection(\"images\", { args: { first: 1 } }, image => {\n    //         image.add(\"id\");\n    //       });\n    //     });\n    //   });\n    // });\n\n    client.send(gql(client)`\n    query {\n      shop {\n        name\n        description\n        products(first:20) {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `).then(({\n      model,\n      data\n    }) => {\n      this.setState({\n        shopName: data.shop.name,\n        products: data.shop.products.edges\n      }); // console.log(model); // The serialized model with rich features\n      // console.log(data); // The raw data returned from the API endpoint\n      // console.log(name);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return __jsx(Layout, {\n      page: \"Shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.shopName), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"This will eventually connect to a shopify store.\"));\n  }\n\n}\n\nShop.defaultProps = {\n  client: client\n};\nexport default Shop;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/pages/shop.js"],"names":["Component","Client","gql","Layout","typeBundle","client","url","fetcherOptions","headers","Shop","constructor","props","state","shopName","products","componentDidMount","send","then","model","data","setState","shop","name","edges","render","console","log","defaultProps"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,0CAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,MAAJ,CAAWG,UAAX,EAAuB;AACpCE,EAAAA,GAAG,EAAE,4DAD+B;AAEpCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACP,2CAAqC;AAD9B;AADK;AAFoB,CAAvB,CAAf;;AASA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMV,MAAM,GAAG,KAAKM,KAAL,CAAWN,MAA1B,CADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,IAAAA,MAAM,CACHW,IADH,CAEId,GAAG,CAACG,MAAD,CAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAFhB,EAyDGY,IAzDH,CAyDQ,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACzB,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAEM,IAAI,CAACE,IAAL,CAAUC,IADR;AAEZR,QAAAA,QAAQ,EAAEK,IAAI,CAACE,IAAL,CAAUP,QAAV,CAAmBS;AAFjB,OAAd,EADyB,CAKzB;AACA;AACA;AACD,KAjEH;AAkED;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKA,KAAL,CAAWC,QAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFF,CADF;AAMD;;AAnG0B;;AAsG7BJ,IAAI,CAACkB,YAAL,GAAoB;AAClBtB,EAAAA,MAAM,EAAEA;AADU,CAApB;AAIA,eAAeI,IAAf","sourcesContent":["import { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport { gql } from \"babel-plugin-graphql-js-client-transform\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\n\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shopName: \"\",\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const client = this.props.client;\n    // let query = client.query(root => {\n    //   root.add(\"shop\", shop => {\n    //     shop.add(\"name\");\n    //     shop.addConnection(\"products\", { args: { first: 10 } }, product => {\n    //       product.add(\"title\");\n    //       product.add(\"description\");\n    //       product.addConnection(\"images\", { args: { first: 1 } }, image => {\n    //         image.add(\"id\");\n    //       });\n    //     });\n    //   });\n    // });\n    client\n      .send(\n        gql(client)`\n    query {\n      shop {\n        name\n        description\n        products(first:20) {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `\n      )\n      .then(({ model, data }) => {\n        this.setState({\n          shopName: data.shop.name,\n          products: data.shop.products.edges\n        });\n        // console.log(model); // The serialized model with rich features\n        // console.log(data); // The raw data returned from the API endpoint\n        // console.log(name);\n      });\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <Layout page=\"Shop\">\n        <h2>{this.state.shopName}</h2>\n        <p>This will eventually connect to a shopify store.</p>\n      </Layout>\n    );\n  }\n}\n\nShop.defaultProps = {\n  client: client\n};\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}