{"ast":null,"code":"var _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/pages/shop.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shopName: \"\",\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    let objects;\n    let query = client.query(root => {\n      root.add(\"shop\", shop => {\n        shop.add(\"name\");\n        shop.addConnection(\"products\", {\n          args: {\n            first: 10\n          }\n        }, product => {\n          product.add(\"title\");\n          product.add(\"description\");\n        });\n      });\n    }); // let query = gql(client)`\n    //   query {\n    //     shop {\n    //       name\n    //       products() {\n    //         edges {\n    //           node {\n    //             id\n    //             title\n    //             options {\n    //               name\n    //               values\n    //               variants() {\n    //                 edges {\n    //                   node {\n    //                     title\n    //                     price\n    //                   }\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    // `;\n\n    client.send(query).then(({\n      model,\n      data\n    }) => {\n      objects = model;\n      this.setState({\n        shopName: data.shop.name,\n        products: data.shop.products.edges\n      }); // console.log(model); // The serialized model with rich features\n      // console.log(data); // The raw data returned from the API endpoint\n      // console.log(name);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return __jsx(Layout, {\n      page: \"Shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.shopName), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"This will eventually connect to a shopify store.\"));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/pages/shop.js"],"names":["Component","Client","Layout","typeBundle","client","url","fetcherOptions","headers","Shop","constructor","props","state","shopName","products","componentDidMount","objects","query","root","add","shop","addConnection","args","first","product","send","then","model","data","setState","name","edges","render","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,MAAMC,MAAM,GAAG,IAAIH,MAAJ,CAAWE,UAAX,EAAuB;AACpCE,EAAAA,GAAG,EAAE,4DAD+B;AAEpCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACP,2CAAqC;AAD9B;AADK;AAFoB,CAAvB,CAAf;;AASA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAC3BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAJ;AACA,QAAIC,KAAK,GAAGZ,MAAM,CAACY,KAAP,CAAaC,IAAI,IAAI;AAC/BA,MAAAA,IAAI,CAACC,GAAL,CAAS,MAAT,EAAiBC,IAAI,IAAI;AACvBA,QAAAA,IAAI,CAACD,GAAL,CAAS,MAAT;AACAC,QAAAA,IAAI,CAACC,aAAL,CAAmB,UAAnB,EAA+B;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAAR,SAA/B,EAAwDC,OAAO,IAAI;AACjEA,UAAAA,OAAO,CAACL,GAAR,CAAY,OAAZ;AACAK,UAAAA,OAAO,CAACL,GAAR,CAAY,aAAZ;AACD,SAHD;AAID,OAND;AAOD,KARW,CAAZ,CAFkB,CAWlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAd,IAAAA,MAAM,CAACoB,IAAP,CAAYR,KAAZ,EAAmBS,IAAnB,CAAwB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AAC3CZ,MAAAA,OAAO,GAAGW,KAAV;AACA,WAAKE,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAEe,IAAI,CAACR,IAAL,CAAUU,IADR;AAEZhB,QAAAA,QAAQ,EAAEc,IAAI,CAACR,IAAL,CAAUN,QAAV,CAAmBiB;AAFjB,OAAd,EAF2C,CAM3C;AACA;AACA;AACD,KATD;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKA,KAAL,CAAWC,QAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFF,CADF;AAMD;;AAnE0B;;AAsE7B,eAAeJ,IAAf","sourcesContent":["import { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\n\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shopName: \"\",\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    let objects;\n    let query = client.query(root => {\n      root.add(\"shop\", shop => {\n        shop.add(\"name\");\n        shop.addConnection(\"products\", { args: { first: 10 } }, product => {\n          product.add(\"title\");\n          product.add(\"description\");\n        });\n      });\n    });\n    // let query = gql(client)`\n    //   query {\n    //     shop {\n    //       name\n    //       products() {\n    //         edges {\n    //           node {\n    //             id\n    //             title\n    //             options {\n    //               name\n    //               values\n    //               variants() {\n    //                 edges {\n    //                   node {\n    //                     title\n    //                     price\n    //                   }\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    // `;\n    client.send(query).then(({ model, data }) => {\n      objects = model;\n      this.setState({\n        shopName: data.shop.name,\n        products: data.shop.products.edges\n      });\n      // console.log(model); // The serialized model with rich features\n      // console.log(data); // The raw data returned from the API endpoint\n      // console.log(name);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <Layout page=\"Shop\">\n        <h2>{this.state.shopName}</h2>\n        <p>This will eventually connect to a shopify store.</p>\n      </Layout>\n    );\n  }\n}\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}