{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nconst url = \"https://another-test-store-97213.myshopify.com/api/graphql\";\nconst headers = {\n  \"Content-Type\": \"application/graphql\",\n  \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n};\nlet queries = {\n  getProductsWithImages: numberOfProducts => {\n    return new Promise((resolve, reject) => {\n      let query = `query\t{\n      products(first:${numberOfProducts})\t{\n        edges {\n          node {\n            id\n            title\n            images(first: 1) {\n              edges {\n                node {\n                  id\n                }\n              }\n            }\n            priceRange {\n              maxVariantPrice {\n                amount\n              }\n            }\n          }\n        }\n      }\n    }`;\n      fetch(url, {\n        method: \"post\",\n        headers: headers,\n        body: query\n      }).then(r => r.json()).then(data => {\n        value = data;\n        resolve(value);\n      });\n    });\n  },\n  getShopName: new Promise((resolve, reject) => {\n    let value = \"cheeseburger\";\n    let query = `query\t{\n      shop {\n        name\n      }\n    }\n    `;\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    }).then(r => r.json()).then(data => {\n      value = data.data.shop.name;\n      resolve(value);\n    });\n  })\n};\nexport default queries;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/queries/shop.js"],"names":["fetch","url","headers","queries","getProductsWithImages","numberOfProducts","Promise","resolve","reject","query","method","body","then","r","json","data","value","getShopName","shop","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,GAAG,GAAG,4DAAZ;AACA,MAAMC,OAAO,GAAG;AACd,kBAAgB,qBADF;AAEd,uCAAqC;AAFvB,CAAhB;AAKA,IAAIC,OAAO,GAAG;AACZC,EAAAA,qBAAqB,EAAEC,gBAAgB,IAAI;AACzC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIC,KAAK,GAAI;uBACIJ,gBAAiB;;;;;;;;;;;;;;;;;;;;MADlC;AAsBAL,MAAAA,KAAK,CAACC,GAAD,EAAM;AACTS,QAAAA,MAAM,EAAE,MADC;AAETR,QAAAA,OAAO,EAAEA,OAFA;AAGTS,QAAAA,IAAI,EAAEF;AAHG,OAAN,CAAL,CAKGG,IALH,CAKQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALb,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,QAAAA,KAAK,GAAGD,IAAR;AACAR,QAAAA,OAAO,CAACS,KAAD,CAAP;AACD,OATH;AAUD,KAjCM,CAAP;AAkCD,GApCW;AAqCZC,EAAAA,WAAW,EAAE,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5C,QAAIQ,KAAK,GAAG,cAAZ;AACA,QAAIP,KAAK,GAAI;;;;;KAAb;AAMAT,IAAAA,KAAK,CAACC,GAAD,EAAM;AACTS,MAAAA,MAAM,EAAE,MADC;AAETR,MAAAA,OAAO,EAAEA,OAFA;AAGTS,MAAAA,IAAI,EAAEF;AAHG,KAAN,CAAL,CAKGG,IALH,CAKQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALb,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,MAAAA,KAAK,GAAGD,IAAI,CAACA,IAAL,CAAUG,IAAV,CAAeC,IAAvB;AACAZ,MAAAA,OAAO,CAACS,KAAD,CAAP;AACD,KATH;AAUD,GAlBY;AArCD,CAAd;AA0DA,eAAeb,OAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst url = \"https://another-test-store-97213.myshopify.com/api/graphql\";\nconst headers = {\n  \"Content-Type\": \"application/graphql\",\n  \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n};\n\nlet queries = {\n  getProductsWithImages: numberOfProducts => {\n    return new Promise((resolve, reject) => {\n      let query = `query\t{\n      products(first:${numberOfProducts})\t{\n        edges {\n          node {\n            id\n            title\n            images(first: 1) {\n              edges {\n                node {\n                  id\n                }\n              }\n            }\n            priceRange {\n              maxVariantPrice {\n                amount\n              }\n            }\n          }\n        }\n      }\n    }`;\n      fetch(url, {\n        method: \"post\",\n        headers: headers,\n        body: query\n      })\n        .then(r => r.json())\n        .then(data => {\n          value = data;\n          resolve(value);\n        });\n    });\n  },\n  getShopName: new Promise((resolve, reject) => {\n    let value = \"cheeseburger\";\n    let query = `query\t{\n      shop {\n        name\n      }\n    }\n    `;\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    })\n      .then(r => r.json())\n      .then(data => {\n        value = data.data.shop.name;\n        resolve(value);\n      });\n  })\n};\n\nexport default queries;\n"]},"metadata":{},"sourceType":"module"}