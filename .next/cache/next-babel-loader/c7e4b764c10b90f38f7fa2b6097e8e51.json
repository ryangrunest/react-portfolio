{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/components/BlogPost.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport WordBreak from \"./WordBreak\";\nimport { Component } from \"react\";\n\nvar BlogPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogPost, _Component);\n\n  function BlogPost(props) {\n    var _this;\n\n    _classCallCheck(this, BlogPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogPost).call(this, props));\n    _this.state = {\n      isOpen: false,\n      openText: [],\n      closedText: \"\"\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BlogPost, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var element = document.querySelector(\"#\".concat(this.props.id, \" .text\"));\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var closedText = this.props.text.match(/.{1,275}/g)[0];\n      var splitText = this.props.text.split(\"\\n\");\n      this.setState({\n        openText: splitText,\n        closedText: closedText\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"BlogPost\",\n        id: this.props.id,\n        key: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.title), __jsx(\"h3\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.date), __jsx(\"div\", {\n        className: \"image-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: this.props.imgPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.isOpen ? this.state.openText.map(function (line, index) {\n        return __jsx(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, line);\n      }) : __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.closedText)), __jsx(WordBreak, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), this.state.openText.length > 1 ? __jsx(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Read More\") : \"\");\n    }\n  }]);\n\n  return BlogPost;\n}(Component);\n\nexport default BlogPost;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/components/BlogPost.js"],"names":["WordBreak","Component","BlogPost","props","state","isOpen","openText","closedText","handleClick","bind","element","document","querySelector","id","setState","text","match","splitText","split","index","title","date","imgPath","map","line","length"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;;IACMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAPiB;AAQlB;;;;kCAEa;AACZ,UAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,YAA2B,KAAKT,KAAL,CAAWU,EAAtC,YAAd;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGD;;;wCAEmB;AAClB,UAAME,UAAU,GAAG,KAAKJ,KAAL,CAAWY,IAAX,CAAgBC,KAAhB,CAAsB,WAAtB,EAAmC,CAAnC,CAAnB;AACA,UAAMC,SAAS,GAAG,KAAKd,KAAL,CAAWY,IAAX,CAAgBG,KAAhB,CAAsB,IAAtB,CAAlB;AACA,WAAKJ,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEW,SADE;AAEZV,QAAAA,UAAU,EAAEA;AAFA,OAAd;AAID;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWU,EAAzC;AAA6C,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWgB,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKhB,KAAL,CAAWiB,KAAlC,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKjB,KAAL,CAAWkB,IAAjC,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWmB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAME;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlB,KAAL,CAAWC,MAAX,GACC,KAAKD,KAAL,CAAWE,QAAX,CAAoBiB,GAApB,CAAwB,UAACC,IAAD,EAAOL,KAAP;AAAA,eAAiB;AAAG,UAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBK,IAAhB,CAAjB;AAAA,OAAxB,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKpB,KAAL,CAAWG,UAAf,CAJJ,CANF,EAaE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcG,KAAKH,KAAL,CAAWE,QAAX,CAAoBmB,MAApB,GAA6B,CAA7B,GACC;AAAQ,QAAA,OAAO,EAAE,KAAKjB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGC,EAjBJ,CADF;AAsBD;;;;EAlDoBP,S;;AAqDvB,eAAeC,QAAf","sourcesContent":["import WordBreak from \"./WordBreak\";\nimport { Component } from \"react\";\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      openText: [],\n      closedText: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let element = document.querySelector(`#${this.props.id} .text`);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  componentDidMount() {\n    const closedText = this.props.text.match(/.{1,275}/g)[0];\n    const splitText = this.props.text.split(\"\\n\");\n    this.setState({\n      openText: splitText,\n      closedText: closedText\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"BlogPost\" id={this.props.id} key={this.props.index}>\n        <h2 className=\"title\">{this.props.title}</h2>\n        <h3 className=\"date\">{this.props.date}</h3>\n        <div className=\"image-container\">\n          <img src={this.props.imgPath}></img>\n        </div>\n        <div className=\"text\">\n          {this.state.isOpen ? (\n            this.state.openText.map((line, index) => <p key={index}>{line}</p>)\n          ) : (\n            <p>{this.state.closedText}</p>\n          )}\n        </div>\n        <WordBreak />\n        {this.state.openText.length > 1 ? (\n          <button onClick={this.handleClick}>Read More</button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BlogPost;\n"]},"metadata":{},"sourceType":"module"}