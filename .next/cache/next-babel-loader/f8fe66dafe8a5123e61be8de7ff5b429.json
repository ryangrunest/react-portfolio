{"ast":null,"code":"var _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/pages/blog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { FirebaseDatabaseProvider, FirebaseDatabaseNode } from \"@react-firebase/database\";\nimport dbconfig from \"../dbconfig\";\nimport Layout from \"../components/MyLayout\";\nimport BlogPost from \"../components/BlogPost\";\nimport WordBreak from \"../components/WordBreak\";\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numBlogs: 0,\n      blogData: []\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(FirebaseDatabaseProvider, _extends({\n      firebase: firebase\n    }, dbconfig, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), __jsx(Layout, {\n      page: \"Blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"These are words about various things that I find interesting or that are encompassing my life.\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Some of them have to do with\", \" \", __jsx(\"span\", {\n      className: \"highlighted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"software development.\"), \"Some of them have to do with\", \" \", __jsx(\"span\", {\n      className: \"highlighted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"sounds.\"), \"Some of them have to do with\", \" \", __jsx(\"span\", {\n      className: \"highlighted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"sunscreen.\"))), __jsx(FirebaseDatabaseNode, {\n      path: \"BlogPosts/\",\n      orderByKey: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, data => {\n      if (data.value) {\n        this.setState({\n          blogData: Object.entries(data.value),\n          numBlogs: Object.entries(data.value).length\n        });\n        return \"\";\n      } else {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Could not get data\");\n      }\n    }), __jsx(\"div\", {\n      className: \"blogpost-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.blogData.reverse().map((blog, index) => {\n      return __jsx(BlogPost, {\n        id: blog[0],\n        title: blog[1].title,\n        text: blog[1].text,\n        imgPath: blog[1].imgPath,\n        date: blog[1].date,\n        key: blog[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nexport default Blog;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/pages/blog.js"],"names":["React","Component","firebase","FirebaseDatabaseProvider","FirebaseDatabaseNode","dbconfig","Layout","BlogPost","WordBreak","Blog","constructor","props","state","numBlogs","blogData","render","data","value","setState","Object","entries","length","reverse","map","blog","index","title","text","imgPath","date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AACA,SACEC,wBADF,EAEEC,oBAFF,QAGO,0BAHP;AAIA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAC3BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,wBAAD;AAA0B,MAAA,QAAQ,EAAEb;AAApC,OAAkDG,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC+B,GAD/B,EAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,kCAG+B,GAH/B,EAIE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,kCAK+B,GAL/B,EAME;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CALF,CADF,EAeE,MAAC,oBAAD;AAAsB,MAAA,IAAI,EAAC,YAA3B;AAAwC,MAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,IAAI,IAAI;AACP,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAEK,MAAM,CAACC,OAAP,CAAeJ,IAAI,CAACC,KAApB,CADE;AAEZJ,UAAAA,QAAQ,EAAEM,MAAM,CAACC,OAAP,CAAeJ,IAAI,CAACC,KAApB,EAA2BI;AAFzB,SAAd;AAIA,eAAO,EAAP;AACD,OAND,MAMO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AACF,KAXH,CAfF,EA4BE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWE,QAAX,CAAoBQ,OAApB,GAA8BC,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,aACE,MAAC,QAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAAC,CAAD,CADV;AAEE,QAAA,KAAK,EAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAFjB;AAGE,QAAA,IAAI,EAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAHhB;AAIE,QAAA,OAAO,EAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAJnB;AAKE,QAAA,IAAI,EAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,IALhB;AAME,QAAA,GAAG,EAAEL,IAAI,CAAC,CAAD,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAXA,CADH,CA5BF,CADF,CADF,CADF;AAiDD;;AA1D0B;;AA6D7B,eAAef,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport {\n  FirebaseDatabaseProvider,\n  FirebaseDatabaseNode\n} from \"@react-firebase/database\";\nimport dbconfig from \"../dbconfig\";\nimport Layout from \"../components/MyLayout\";\nimport BlogPost from \"../components/BlogPost\";\nimport WordBreak from \"../components/WordBreak\";\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numBlogs: 0,\n      blogData: []\n    };\n  }\n  render() {\n    return (\n      <div className=\"blog\">\n        <FirebaseDatabaseProvider firebase={firebase} {...dbconfig}>\n          <Layout page=\"Blog\">\n            <h1>\n              <p>\n                These are words about various things that I find interesting or\n                that are encompassing my life.\n              </p>\n              <p>\n                Some of them have to do with{\" \"}\n                <span className=\"highlighted\">software development.</span>\n                Some of them have to do with{\" \"}\n                <span className=\"highlighted\">sounds.</span>\n                Some of them have to do with{\" \"}\n                <span className=\"highlighted\">sunscreen.</span>\n              </p>\n            </h1>\n            <FirebaseDatabaseNode path=\"BlogPosts/\" orderByKey>\n              {data => {\n                if (data.value) {\n                  this.setState({\n                    blogData: Object.entries(data.value),\n                    numBlogs: Object.entries(data.value).length\n                  });\n                  return \"\";\n                } else {\n                  return <div>Could not get data</div>;\n                }\n              }}\n            </FirebaseDatabaseNode>\n            <div className=\"blogpost-container\">\n              {this.state.blogData.reverse().map((blog, index) => {\n                return (\n                  <BlogPost\n                    id={blog[0]}\n                    title={blog[1].title}\n                    text={blog[1].text}\n                    imgPath={blog[1].imgPath}\n                    date={blog[1].date}\n                    key={blog[0]}\n                  />\n                );\n              })}\n            </div>\n          </Layout>\n        </FirebaseDatabaseProvider>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}