{"ast":null,"code":"var _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/pages/shop.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport fetch from \"cross-fetch\";\nimport { gql } from \"babel-plugin-graphql-js-client-transform\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\nconst query = client.query(root => {\n  root.add(\"shop\", shop => {\n    shop.add(\"name\");\n    shop.addConnection(\"products\", {\n      args: {\n        first: 10\n      }\n    }, product => {\n      product.add(\"title\");\n    });\n  });\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let objects;\n    client.send(query).then(({\n      model,\n      data\n    }) => {\n      objects = model;\n      console.log(model); // The serialized model with rich features\n\n      console.log(data); // The raw data returned from the API endpoint\n    });\n  }\n\n  render() {\n    console.log(client);\n    return __jsx(Layout, {\n      page: \"Shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"This is the Shop page.\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"This will eventually connect to a shopify store.\"));\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/pages/shop.js"],"names":["Component","Client","fetch","gql","Layout","typeBundle","client","url","fetcherOptions","headers","query","root","add","shop","addConnection","args","first","product","Shop","constructor","props","state","componentDidMount","objects","send","then","model","data","console","log","render"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,GAAT,QAAoB,0CAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,MAAMC,MAAM,GAAG,IAAIL,MAAJ,CAAWI,UAAX,EAAuB;AACpCE,EAAAA,GAAG,EAAE,4DAD+B;AAEpCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACP,2CAAqC;AAD9B;AADK;AAFoB,CAAvB,CAAf;AASA,MAAMC,KAAK,GAAGJ,MAAM,CAACI,KAAP,CAAaC,IAAI,IAAI;AACjCA,EAAAA,IAAI,CAACC,GAAL,CAAS,MAAT,EAAiBC,IAAI,IAAI;AACvBA,IAAAA,IAAI,CAACD,GAAL,CAAS,MAAT;AACAC,IAAAA,IAAI,CAACC,aAAL,CAAmB,UAAnB,EAA+B;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAR,KAA/B,EAAwDC,OAAO,IAAI;AACjEA,MAAAA,OAAO,CAACL,GAAR,CAAY,OAAZ;AACD,KAFD;AAGD,GALD;AAMD,CAPa,CAAd;;AASA,MAAMM,IAAN,SAAmBlB,SAAnB,CAA6B;AAC3BmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAJ;AACAjB,IAAAA,MAAM,CAACkB,IAAP,CAAYd,KAAZ,EAAmBe,IAAnB,CAAwB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AAC3CJ,MAAAA,OAAO,GAAGG,KAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF2C,CAEvB;;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAH2C,CAGxB;AACpB,KAJD;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFF,CADF;AAMD;;AAvB0B;;AA0B7B,eAAeY,IAAf","sourcesContent":["import { Component } from \"react\";\nimport Client from \"graphql-js-client\";\nimport fetch from \"cross-fetch\";\nimport { gql } from \"babel-plugin-graphql-js-client-transform\";\nimport Layout from \"../components/MyLayout\";\nimport typeBundle from \"../types\";\n\nconst client = new Client(typeBundle, {\n  url: \"https://another-test-store-97213.myshopify.com/api/graphql\",\n  fetcherOptions: {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n    }\n  }\n});\n\nconst query = client.query(root => {\n  root.add(\"shop\", shop => {\n    shop.add(\"name\");\n    shop.addConnection(\"products\", { args: { first: 10 } }, product => {\n      product.add(\"title\");\n    });\n  });\n});\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let objects;\n    client.send(query).then(({ model, data }) => {\n      objects = model;\n      console.log(model); // The serialized model with rich features\n      console.log(data); // The raw data returned from the API endpoint\n    });\n  }\n\n  render() {\n    console.log(client);\n    return (\n      <Layout page=\"Shop\">\n        <p>This is the Shop page.</p>\n        <p>This will eventually connect to a shopify store.</p>\n      </Layout>\n    );\n  }\n}\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}