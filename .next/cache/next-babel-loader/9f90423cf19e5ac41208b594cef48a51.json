{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport fetch from \"isomorphic-unfetch\";\nvar url = \"https://another-test-store-97213.myshopify.com/api/graphql\";\nvar headers = {\n  \"Content-Type\": \"application/graphql\",\n  \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n};\nvar queries = {\n  getProductsWithImages: new _Promise(function (resolve, reject, numberOfProducts) {\n    var query = \"query\\t{\\n      products(first:\".concat(numberOfProducts, \")\\t{\\n        edges {\\n          node {\\n            id\\n            title\\n            images(first: 1) {\\n              edges {\\n                node {\\n                  id\\n                }\\n              }\\n            }\\n            priceRange {\\n              maxVariantPrice {\\n                amount\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\");\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    }).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  }),\n  getShopName: new _Promise(function (resolve, reject) {\n    var value = \"cheeseburger\";\n    var query = \"query\\t{\\n      shop {\\n        name\\n      }\\n    }\\n    \";\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    }).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      value = data.data.shop.name;\n      resolve(value);\n    });\n  })\n};\nexport default queries;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/queries/shop.js"],"names":["fetch","url","headers","queries","getProductsWithImages","resolve","reject","numberOfProducts","query","method","body","then","r","json","data","console","log","getShopName","value","shop","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,GAAG,GAAG,4DAAZ;AACA,IAAMC,OAAO,GAAG;AACd,kBAAgB,qBADF;AAEd,uCAAqC;AAFvB,CAAhB;AAKA,IAAIC,OAAO,GAAG;AACZC,EAAAA,qBAAqB,EAAE,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAkBC,gBAAlB,EAAuC;AACxE,QAAIC,KAAK,4CACUD,gBADV,kYAAT;AAsBAP,IAAAA,KAAK,CAACC,GAAD,EAAM;AACTQ,MAAAA,MAAM,EAAE,MADC;AAETP,MAAAA,OAAO,EAAEA,OAFA;AAGTQ,MAAAA,IAAI,EAAEF;AAHG,KAAN,CAAL,CAKGG,IALH,CAKQ,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KALT,EAMGF,IANH,CAMQ,UAAAG,IAAI,EAAI;AACZ,aAAOC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAP;AACD,KARH;AASD,GAhCsB,CADX;AAkCZG,EAAAA,WAAW,EAAE,aAAY,UAACZ,OAAD,EAAUC,MAAV,EAAqB;AAC5C,QAAIY,KAAK,GAAG,cAAZ;AACA,QAAIV,KAAK,+DAAT;AAMAR,IAAAA,KAAK,CAACC,GAAD,EAAM;AACTQ,MAAAA,MAAM,EAAE,MADC;AAETP,MAAAA,OAAO,EAAEA,OAFA;AAGTQ,MAAAA,IAAI,EAAEF;AAHG,KAAN,CAAL,CAKGG,IALH,CAKQ,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KALT,EAMGF,IANH,CAMQ,UAAAG,IAAI,EAAI;AACZI,MAAAA,KAAK,GAAGJ,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeC,IAAvB;AACAf,MAAAA,OAAO,CAACa,KAAD,CAAP;AACD,KATH;AAUD,GAlBY;AAlCD,CAAd;AAuDA,eAAef,OAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst url = \"https://another-test-store-97213.myshopify.com/api/graphql\";\nconst headers = {\n  \"Content-Type\": \"application/graphql\",\n  \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n};\n\nlet queries = {\n  getProductsWithImages: new Promise((resolve, reject, numberOfProducts) => {\n    let query = `query\t{\n      products(first:${numberOfProducts})\t{\n        edges {\n          node {\n            id\n            title\n            images(first: 1) {\n              edges {\n                node {\n                  id\n                }\n              }\n            }\n            priceRange {\n              maxVariantPrice {\n                amount\n              }\n            }\n          }\n        }\n      }\n    }`;\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    })\n      .then(r => r.json())\n      .then(data => {\n        return console.log(data);\n      });\n  }),\n  getShopName: new Promise((resolve, reject) => {\n    let value = \"cheeseburger\";\n    let query = `query\t{\n      shop {\n        name\n      }\n    }\n    `;\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    })\n      .then(r => r.json())\n      .then(data => {\n        value = data.data.shop.name;\n        resolve(value);\n      });\n  })\n};\n\nexport default queries;\n"]},"metadata":{},"sourceType":"module"}