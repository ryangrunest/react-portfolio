{"ast":null,"code":"var _jsxFileName = \"/Users/rgrunest/Developer/react-portfolio/components/BlogPost.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport WordBreak from \"./WordBreak\";\nimport { Component } from \"react\";\n\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      openText: [],\n      closedText: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let element = document.querySelector(`#${this.props.id} .text`);\n    console.log(element);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  componentDidMount() {\n    const closedText = this.props.text.match(/.{1,275}/g)[0];\n    const splitText = this.props.text.split(\"\\n\");\n    this.setState({\n      openText: splitText,\n      closedText: closedText\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"BlogPost\",\n      id: this.props.id,\n      key: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.title), __jsx(\"h3\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.date), __jsx(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: this.props.imgPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.isOpen ? this.state.openText.map((line, index) => __jsx(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, line)) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.closedText)), __jsx(WordBreak, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Read More\"));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["/Users/rgrunest/Developer/react-portfolio/components/BlogPost.js"],"names":["WordBreak","Component","BlogPost","constructor","props","state","isOpen","openText","closedText","handleClick","bind","element","document","querySelector","id","console","log","setState","componentDidMount","text","match","splitText","split","render","index","title","date","imgPath","map","line"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,QAAIE,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAG,KAAKT,KAAL,CAAWU,EAAG,QAAzC,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SAAKM,QAAL,CAAc;AACZX,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,KAAd;AAGD;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,UAAMV,UAAU,GAAG,KAAKJ,KAAL,CAAWe,IAAX,CAAgBC,KAAhB,CAAsB,WAAtB,EAAmC,CAAnC,CAAnB;AACA,UAAMC,SAAS,GAAG,KAAKjB,KAAL,CAAWe,IAAX,CAAgBG,KAAhB,CAAsB,IAAtB,CAAlB;AACA,SAAKL,QAAL,CAAc;AACZV,MAAAA,QAAQ,EAAEc,SADE;AAEZb,MAAAA,UAAU,EAAEA;AAFA,KAAd;AAID;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAE,KAAKnB,KAAL,CAAWU,EAAzC;AAA6C,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWoB,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKpB,KAAL,CAAWqB,KAAlC,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKrB,KAAL,CAAWsB,IAAjC,CAFF,EAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKtB,KAAL,CAAWuB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAME;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWC,MAAX,GACC,KAAKD,KAAL,CAAWE,QAAX,CAAoBqB,GAApB,CAAwB,CAACC,IAAD,EAAOL,KAAP,KAAiB;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBK,IAAhB,CAAzC,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKxB,KAAL,CAAWG,UAAf,CAJJ,CANF,EAaE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdF,CADF;AAkBD;;AA/C8B;;AAkDjC,eAAeP,QAAf","sourcesContent":["import WordBreak from \"./WordBreak\";\nimport { Component } from \"react\";\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      openText: [],\n      closedText: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let element = document.querySelector(`#${this.props.id} .text`);\n    console.log(element);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  componentDidMount() {\n    const closedText = this.props.text.match(/.{1,275}/g)[0];\n    const splitText = this.props.text.split(\"\\n\");\n    this.setState({\n      openText: splitText,\n      closedText: closedText\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"BlogPost\" id={this.props.id} key={this.props.index}>\n        <h2 className=\"title\">{this.props.title}</h2>\n        <h3 className=\"date\">{this.props.date}</h3>\n        <div className=\"image-container\">\n          <img src={this.props.imgPath}></img>\n        </div>\n        <div className=\"text\">\n          {this.state.isOpen ? (\n            this.state.openText.map((line, index) => <p key={index}>{line}</p>)\n          ) : (\n            <p>{this.state.closedText}</p>\n          )}\n        </div>\n        <WordBreak />\n        <button onClick={this.handleClick}>Read More</button>\n      </div>\n    );\n  }\n}\n\nexport default BlogPost;\n"]},"metadata":{},"sourceType":"module"}