{"version":3,"file":"static/webpack/static/development/pages/shop.js.405d17dee69148a1a34d.hot-update.js","sources":["webpack:///./queries/shop.js"],"sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst url = \"https://another-test-store-97213.myshopify.com/api/graphql\";\nconst headers = {\n  \"Content-Type\": \"application/graphql\",\n  \"X-Shopify-Storefront-Access-Token\": \"5db76a7bcd70717eade01e6a64392829\"\n};\n\nlet queries = {\n  getProductsWithImages: numberOfProducts => {\n    return new Promise((resolve, reject) => {\n      let query = `query\t{\n      products(first:${numberOfProducts})\t{\n        edges {\n          node {\n            id\n            title\n            images(first: 1) {\n              edges {\n                node {\n                  id\n                }\n              }\n            }\n            variants(first:10) {\n              edges {\n                node {\n                  image {\n                    transformedSrc\n                  }\n                }\n              }\n            }\n            priceRange {\n              maxVariantPrice {\n                amount\n              }\n            }\n          }\n        }\n      }\n    }`;\n      fetch(url, {\n        method: \"post\",\n        headers: headers,\n        body: query\n      })\n        .then(r => r.json())\n        .then(data => {\n          console.log(data);\n          resolve(data.data.products.edges);\n        });\n    });\n  },\n  getShopName: new Promise((resolve, reject) => {\n    let value = \"cheeseburger\";\n    let query = `query\t{\n      shop {\n        name\n      }\n    }\n    `;\n    fetch(url, {\n      method: \"post\",\n      headers: headers,\n      body: query\n    })\n      .then(r => r.json())\n      .then(data => {\n        value = data.data.shop.name;\n        resolve(value);\n      });\n  })\n};\n\nexport default queries;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AA+BA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAhEA;AAmEA;;;;A","sourceRoot":""}