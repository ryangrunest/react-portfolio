{"version":3,"file":"static/webpack/static/development/pages/blog.js.8194092a2dc5a3ed81cd.hot-update.js","sources":["webpack:///./components/BlogPost.js"],"sourcesContent":["import WordBreak from \"./WordBreak\";\nimport { Component } from \"react\";\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      openText: [],\n      closedText: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let element = document.querySelector(`#${this.props.id} .text`);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  componentDidMount() {\n    const closedText = this.props.text.match(/.{1,275}/g)[0];\n    const splitText = this.props.text.split(\"\\n\");\n    this.setState({\n      openText: splitText,\n      closedText: closedText\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"BlogPost\"\n        style={this.state.isOpen ? \"width=100%\" : 0}\n        id={this.props.id}\n        key={this.props.index}\n      >\n        <h2 className=\"title\">{this.props.title}</h2>\n        <h3 className=\"date\">{this.props.date}</h3>\n        <div className=\"image-container\">\n          <img src={this.props.imgPath}></img>\n        </div>\n        <div className=\"text\">\n          {this.state.isOpen ? (\n            this.state.openText.map((line, index) => <p key={index}>{line}</p>)\n          ) : (\n            <p>{this.state.closedText}</p>\n          )}\n        </div>\n        <WordBreak />\n        {this.state.openText.length > 1 ? (\n          <div className=\"button-container\">\n            <button onClick={this.handleClick}>\n              {this.state.isOpen ? \"Read Less\" : \"Read More\"}\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BlogPost;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA3DA;AACA;AA6DA;;;;A","sourceRoot":""}